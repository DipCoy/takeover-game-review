function Validator.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push pointer 0
return
function Validator.isTurnValid 2
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
call Validator.isAreaEqualsDices 5
pop local 0
push pointer 0
push argument 1
push argument 2
call Validator.isAreaOnEmptyFields 3
pop local 1
push argument 5
call Player.getScore 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 1
and
push pointer 0
push argument 1
push argument 2
push argument 5
call Validator.isAreaInCorner 4
and
return
label IF_FALSE0
push local 0
push local 1
and
push pointer 0
push argument 1
push argument 2
push argument 5
call Validator.isAreaJoinedToExisting 4
and
return
function Validator.isAreaEqualsDices 4
push argument 0
pop pointer 0
push argument 1
push argument 2
call Cell.getSquareSides 2
pop local 1
push local 1
call Cell.getRow 1
pop local 2
push local 1
call Cell.getColumn 1
pop local 3
push local 2
push argument 3
eq
push local 3
and
push argument 4
eq
push local 2
push argument 4
eq
push local 3
and
push argument 3
eq
or
pop local 0
push local 0
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 11
call String.new 1
push constant 87
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 103
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 34
call FieldPainter.printMessage 2
pop temp 0
label IF_FALSE0
push local 0
return
function Validator.isAreaJoinedToExisting 10
push argument 0
pop pointer 0
push constant 0
pop local 9
push argument 1
call Cell.getRow 1
push argument 2
call Cell.getRow 1
call Math.min 2
pop local 0
push argument 1
call Cell.getRow 1
push argument 2
call Cell.getRow 1
call Math.max 2
pop local 1
push argument 1
call Cell.getColumn 1
push argument 2
call Cell.getColumn 1
call Math.min 2
pop local 2
push argument 1
call Cell.getColumn 1
push argument 2
call Cell.getColumn 1
call Math.max 2
pop local 3
push local 0
pop local 4
label WHILE_EXP0
push local 4
push local 1
push constant 1
add
lt
not
if-goto WHILE_END0
push local 4
push local 2
push constant 1
sub
call Validator.isCoordsOutOfBounds 2
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 4
push local 2
push constant 1
sub
call Cell.new 2
pop local 7
push pointer 0
push argument 3
push local 7
call Validator.isPlayerOwnsCell 3
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 9
label IF_FALSE1
label IF_FALSE0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 0
pop local 4
label WHILE_EXP1
push local 4
push local 1
push constant 1
add
lt
not
if-goto WHILE_END1
push local 4
push local 3
push constant 1
add
call Validator.isCoordsOutOfBounds 2
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 4
push local 3
push constant 1
add
call Cell.new 2
pop local 7
push pointer 0
push argument 3
push local 7
call Validator.isPlayerOwnsCell 3
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop local 9
label IF_FALSE3
label IF_FALSE2
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP1
label WHILE_END1
push local 2
pop local 5
label WHILE_EXP2
push local 5
push local 3
push constant 1
add
lt
not
if-goto WHILE_END2
push local 0
push constant 1
sub
push local 5
call Validator.isCoordsOutOfBounds 2
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push constant 1
sub
push local 5
call Cell.new 2
pop local 7
push pointer 0
push argument 3
push local 7
call Validator.isPlayerOwnsCell 3
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
pop local 9
label IF_FALSE5
label IF_FALSE4
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP2
label WHILE_END2
push local 2
pop local 5
label WHILE_EXP3
push local 5
push local 3
push constant 1
add
lt
not
if-goto WHILE_END3
push local 1
push constant 1
add
push local 5
call Validator.isCoordsOutOfBounds 2
not
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 1
push constant 1
add
push local 5
call Cell.new 2
pop local 7
push pointer 0
push argument 3
push local 7
call Validator.isPlayerOwnsCell 3
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
not
pop local 9
label IF_FALSE7
label IF_FALSE6
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP3
label WHILE_END3
push local 9
not
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 19
call String.new 1
push constant 74
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 31
call FieldPainter.printMessage 2
pop temp 0
label IF_FALSE8
push local 9
return
function Validator.isAreaInCorner 5
push argument 0
pop pointer 0
push argument 1
call Cell.getRow 1
push argument 2
call Cell.getRow 1
call Math.min 2
pop local 0
push argument 1
call Cell.getRow 1
push argument 2
call Cell.getRow 1
call Math.max 2
pop local 1
push argument 1
call Cell.getColumn 1
push argument 2
call Cell.getColumn 1
call Math.min 2
pop local 2
push argument 1
call Cell.getColumn 1
push argument 2
call Cell.getColumn 1
call Math.max 2
pop local 3
push argument 3
call Player.getPlayerNum 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 0
push local 2
call Validator.isCoordsIn00 3
pop local 4
goto IF_END0
label IF_FALSE0
push pointer 0
push local 1
push local 3
call Validator.isCoordsInMaxMax 3
pop local 4
label IF_END0
push local 4
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 17
call String.new 1
push constant 83
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 102
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call FieldPainter.printMessage 2
pop temp 0
label IF_FALSE1
push local 4
return
function Validator.isCoordsIn00 0
push argument 0
pop pointer 0
push argument 1
push constant 0
eq
push argument 2
push constant 0
eq
and
return
function Validator.isCoordsInMaxMax 0
push argument 0
pop pointer 0
push argument 1
call Consts.rows 0
push constant 1
sub
eq
push argument 2
call Consts.columns 0
push constant 1
sub
eq
and
return
function Validator.isPlayerOwnsCell 2
push argument 0
pop pointer 0
push argument 2
call Cell.getRow 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 2
call Cell.getColumn 1
push local 0
add
pop pointer 1
push that 0
pop local 1
push argument 1
call Player.getPlayerNum 1
push local 1
eq
return
function Validator.isAreaOnEmptyFields 8
push argument 0
pop pointer 0
push constant 0
not
pop local 7
push argument 1
call Cell.getRow 1
push argument 2
call Cell.getRow 1
call Math.min 2
pop local 0
push argument 1
call Cell.getRow 1
push argument 2
call Cell.getRow 1
call Math.max 2
pop local 1
push argument 1
call Cell.getColumn 1
push argument 2
call Cell.getColumn 1
call Math.min 2
pop local 2
push argument 1
call Cell.getColumn 1
push argument 2
call Cell.getColumn 1
call Math.max 2
pop local 3
label WHILE_EXP0
push local 0
push local 1
push constant 1
add
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 6
push local 2
pop local 4
label WHILE_EXP1
push local 4
push local 3
push constant 1
add
lt
not
if-goto WHILE_END1
push local 4
push local 6
add
pop pointer 1
push that 0
pop local 5
push local 5
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 7
label IF_FALSE0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 7
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 17
call String.new 1
push constant 67
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 39
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 102
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call FieldPainter.printMessage 2
pop temp 0
label IF_FALSE1
push local 7
return
function Validator.isCoordsOutOfBounds 0
push argument 0
push constant 0
lt
push argument 1
push constant 0
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push argument 0
call Consts.rows 0
push constant 1
sub
gt
push argument 1
call Consts.columns 0
push constant 1
sub
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
push constant 0
return
