class Player {
    field Cell cursor;
    field int playerNum;
    field int score;

    constructor Player new(int n) {
        let playerNum = n;
        let score = 0;
        if (playerNum = 1) {
            let cursor = Cell.new(0, 0);
        } else {
            let cursor = Cell.new(29, 49);
        }
        
        return this;
    }

    method void drawScore() {
        if (playerNum = 1) {
            do Output.moveCursor(22, 18);
        } else {
            if (score < 10) {
                do Output.moveCursor(22, 57);
            }
            if ((score > 9) & (score < 100)) {
                do Output.moveCursor(22, 56);
            }
            if ((score > 99) & (score < 1000)) {
                do Output.moveCursor(22, 55);
            }
            if (score > 999) {
                do Output.moveCursor(22, 54);
            }
        }

        do Output.printString("P");
        do Output.printInt(playerNum);
        do Output.printString(": ");

        do Output.printInt(score);
        
        return;
    }

    method void addScore(int s) {
        let score = score + s;
        do drawScore();
        return;
    }

    method int getScore() {
        return score;
    }

    method Cell getCursor() {
        return cursor;
    }

    method int getPlayerNum() {
        return playerNum;
    }

    method void move(int deltaRow, int deltaColumn) {
        if (Validator.isCoordsOutOfBounds(cursor.getRow() + deltaRow, cursor.getColumn() + deltaColumn)) {
            return;
        }

        do cursor.setRow(cursor.getRow() + deltaRow);
        do cursor.setColumn(cursor.getColumn() + deltaColumn);

        return;
    }

    function int getKeyPressed() {
		var int key;
		let key = 0;
		while (key = 0) {
			let key = Keyboard.keyPressed();
		}
		return key;
	}
}